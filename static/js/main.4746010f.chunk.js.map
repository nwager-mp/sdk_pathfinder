{"version":3,"sources":["mp/GetSDK.ts","app/Frame.tsx","app/reusables/accordion/Accordion.tsx","app/reusables/accordion/AccordionItem.tsx","app/reusables/icon/Icon.tsx","app/reusables/accordion/AccordionGroup.tsx","app/ui/Menu.tsx","app/ui/MenuButton.tsx","app/utils.ts","app/Pathfinder.ts","app/Translator.ts","app/sdk-components/PathRenderer.ts","app/sdk-components/CameraController.ts","app/sdk-components/index.ts","app/sweepAliases.ts","app/ui/overlay/ProgressBar.tsx","app/ui/overlay/ControlsOverlay.tsx","app/ui/overlay/FlyModeButton.tsx","app/reusables/icon-button/IconButton.tsx","app/App.tsx","index.tsx"],"names":["GetSDK","elementId","applicationKey","Promise","resolve","reject","intervalId","setInterval","a","iframe","HTMLIFrameElement","document","getElementById","contentWindow","sdkWindow","MP_SDK","clearInterval","sdk","connect","Frame","this","props","src","id","customRef","children","disableClicks","className","title","allowFullScreen","frameBorder","ref","style","pointerEvents","undefined","Component","Accordion","header","ACCORDION_ITEM_HEIGHT","AccordionItem","body","selected","onClick","classNames","height","Icon","icon","classes","classArray","Array","isArray","AccordionGroup","state","expanded","showChildren","setState","setTimeout","showNumber","numChildren","length","hasChildren","contentHeight","Menu","sweepGroups","sweepData","sweepAlias","groups","s","sid","floor","push","onChange","selectedSweepId","name","floorMap","getGroups","floors","selectedFloor","Object","entries","sweeps","items","renderItem","floorName","floorSequence","sequence","marginLeft","onChangeLang","value","onClose","renderLanguageSelect","type","renderGroups","MenuButton","text","distance","p1","p2","Math","sqrt","x","y","z","sweepIdToPoint","position","clamp","num","min","max","Pathfinder","VERT_THRESHOLD","HORZ_THRESHOLD","graph","path","sweepPositions","forEach","sweep","createGraph","i","sweep_a","adj","neighbor_sids","neighbors","j","sweep_b_sid","d","i_sid","j_sid","a_sid","b_sid","console","error","ht","visited","cost","parent","debug_n","min_sid","encountered_sids","keys","dist","penalty","heuristic","log","reverse","Translator","lang","url","key","xhr","XMLHttpRequest","query","open","send","status","onload","readyState","responseText","texts","callBack","json","parse","obj","JSON","transTexts","translations","PathRenderer","material","inputs","visible","radius","color","opacity","heightOffset","stepMultiplier","context","outputs","curve","onInit","THREE","three","every","p","points","map","Vector3","spline","CatmullRomCurve3","extrudeSettings","steps","bevelEnabled","extrudePath","arcShape","Shape","absarc","PI","extrudeGeometry","ExtrudeGeometry","MeshBasicMaterial","transparent","pathMesh","Mesh","objectRoot","onEvent","_type","_data","onInputsUpdated","_previous","onTick","_tickDelta","onDestroy","dispose","pathRendererType","PathRendererFactory","CameraController","u","up","speed","verticalOffset","enabled","changeUCallback","camera","PerspectiveCamera","getLength","tickDelta","getPoseAt","rotation","setCamera","uPast","uFuture","getPointAt","positionPast","positionFuture","matrix","Matrix4","lookAt","Euler","setFromRotationMatrix","copy","updateProjectionMatrix","cameraControllerType","CameraControllerFactory","initComponents","all","Scene","register","sweepAliases","PROGRESS_BAR_THUMB_SIZE","ProgressBar","abortController","AbortController","trackRef","React","createRef","onMouseDown","e","ev","button","calculate","clientX","mouseDown","onMouseUp","onMouseMove","scrub","initValue","window","addEventListener","signal","abort","prevProps","prevState","overrideValue","mx","track","current","rect","getBoundingClientRect","left","right","noThumb","percent","width","inset","display","ControlsOverlay","onScrubMouseDown","onPause","onScrubMouseUp","rememberPlayState","onPlay","togglePlay","playing","onExit","setU","FlyModeButton","IconButton","defaultUrlParams","m","qs","hr","brand","help","play","App","pathNode","pathfinder","flyNode","camCon","onOptionSelect","clearSelection","stop","toggleFlyMode","flyModeEnabled","flyU","exitFly","initFly","createNode","addComponent","cam","bind","start","Mode","moveTo","DOLLHOUSE","playFly","INSIDE","flyModePlaying","pauseFly","setFlyU","toggleMenu","menuEnabled","queryString","handleUrlParams","process","params","URLSearchParams","location","search","get","k","v","has","append","toString","Model","getData","then","data","mattertags","label","description","anchorPosition","stemVector","Mattertag","add","Sweep","subscribe","onCollectionUpdated","collection","sweepMap","Floor","currentSweep","currSweepId","translateMattertags","_prevProps","handlePath","findShortestPath","Trans","mattertagData","media","translate","newTexts","newLabel","newDescription","editBillboard","checkUsage","changeLang","target","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4746010f.chunk.js","sourcesContent":["import { MpSdk, ShowcaseEmbedWindow } from './sdk';\n\nconst SDK_VERSION = '3.2';\n\n/**\n * Gets a reference to the SDK. Use this if you want to do SDK stuff.\n * @param {string | HTMLIFrameElement} elementId ID of the iframe or the iframe element itself\n * @param {string} applicationKey Your API key \n * @returns Promise of MpSdk reference\n */\nexport const GetSDK = function(elementId: string | HTMLIFrameElement, applicationKey: string): Promise<MpSdk> {\n  return new Promise(function(resolve, reject) {\n    const checkIframe = async function() {\n      let iframe = null;\n      if (elementId instanceof HTMLIFrameElement) {\n        iframe = elementId as HTMLIFrameElement;\n      }\n      else {\n        iframe = document.getElementById(elementId) as HTMLIFrameElement;\n      }\n\n      if (iframe) {\n        // sometimes this is undefined for some reason, so check for it\n        const sdkWindow = (await iframe.contentWindow as ShowcaseEmbedWindow).MP_SDK;\n        if (sdkWindow) {\n          clearInterval(intervalId);\n          const sdk = sdkWindow.connect(iframe, applicationKey, SDK_VERSION);\n          resolve(sdk);\n        }\n      }\n    };\n    const intervalId = setInterval(checkIframe, 100);\n  });\n}\n","import React, { Component } from 'react';\nimport './Frame.scss';\n\ninterface Props {\n  src: string;\n  id?: string;\n  customRef?: React.RefObject<HTMLIFrameElement>\n  disableClicks?: boolean;\n}\n\n/**\n * This component houses the actual Matterport IFrame element. Doesn't do anything else.\n */\nexport default class Frame extends Component<Props, {}> {\n\n  render() {\n    const {\n      src,\n      id,\n      customRef,\n      children,\n      disableClicks,\n    } = this.props;\n\n    return (\n      <div className='frame'>\n        <iframe\n          id={id || 'showcase'}\n          className='frame'\n          src={src}\n          title={'showcase'}\n          allowFullScreen={true}\n          frameBorder='0'\n          ref={customRef}\n          style={disableClicks ? { pointerEvents: 'none', } : undefined}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './Accordion.scss';\n\ninterface AccordionProps {\n  header?: string\n}\n\nexport default class Accordion extends Component<AccordionProps> {\n\n  public render() {\n    const { header, children } = this.props;\n\n    return (\n      <div className='accordion'>\n        { header &&\n          <div className='accordion-header header-font'>{header}</div>\n        }\n        <div className='accordion-groups'>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}","import classNames from 'classnames';\nimport { Component } from 'react';\nimport './AccordionItem.scss';\n\ninterface AccordionItemProps {\n  header?: string;\n  body?: string;\n  selected?: boolean;\n  onClick?: (e: any) => void;\n}\n\nexport const ACCORDION_ITEM_HEIGHT = '52px';\n\nexport default class AccordionItem extends Component<AccordionItemProps> {\n  public render() {\n    const { header, body, selected, onClick } = this.props;\n    return (\n      <div\n        className={classNames('accordion-item', {'selected': !!selected})}\n        onClick={onClick}\n        style={{ height: ACCORDION_ITEM_HEIGHT }}\n      >\n        <div className='accordion-item-details'>\n          <div className='accordion-item-header'>{header}</div>\n          <div className='accordion-item-body'>{body}</div>\n        </div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport './Icon.scss';\nimport classNames from 'classnames';\n\ninterface IconProps {\n  icon: string;\n  classes?: string | string[];\n}\n\nexport default class Icon extends Component<IconProps> {\n  public render() {\n    const { icon, classes } = this.props;\n    let classArray: string[] = [];\n    if (classes) {\n      if (Array.isArray(classes)) {\n        classArray = classes;\n      } else {\n        classArray = [classes];\n      }\n    }\n\n    return (\n      <span className={classNames('icon', 'icon-' + icon, ...classArray)} />\n    );\n  }\n}","import { Component } from 'react';\nimport classNames from 'classnames';\nimport './AccordionGroup.scss';\nimport { ACCORDION_ITEM_HEIGHT } from './AccordionItem';\nimport Icon from '../icon/Icon';\n\ninterface AccordionGroupProps {\n  header?: string;\n  expanded?: boolean;\n  showNumber?: boolean;\n}\n\ninterface AccordionGroupState {\n  expanded: boolean;\n  showChildren: boolean;\n}\n\nexport default class AccordionGroup extends Component<AccordionGroupProps, AccordionGroupState> {\n  constructor(props: any) {\n    super(props);\n    const { expanded } = this.props;\n    this.state = {\n      expanded: !!expanded,\n      showChildren: !!expanded,\n    };\n  }\n\n  private onClick = () => {\n    const { expanded, showChildren } = this.state;\n    this.setState({\n      expanded: !expanded,\n    }, () => setTimeout(() => this.setState({showChildren: !showChildren}), showChildren ? 250 : 0));\n  }\n  \n  public render() {\n    const { children, header, showNumber } = this.props;\n    const { expanded } = this.state;\n\n    let numChildren = 0;\n    if (children) {\n      if (Array.isArray(children)) {\n        numChildren = children.length;\n      } else {\n        numChildren =  1; // one child fails isArray check\n      }\n    }\n    const hasChildren = numChildren > 0;\n    const contentHeight = expanded && hasChildren ? `calc(${numChildren}*${ACCORDION_ITEM_HEIGHT})` : '0';\n\n    return (\n      <div className={classNames('accordion-group-container', {'collapsed': !expanded})}>\n        <div\n          className='accordion-group-header header-font'\n          onClick={this.onClick}\n        >\n          {'' + header + (hasChildren && showNumber ? ` (${numChildren})` : '')}\n          <Icon icon='chevron-down' />\n        </div>\n        <div\n          className={classNames('accordion-group', {\n            'collapsed': !expanded,\n          })}\n          style={{ height: contentHeight }}\n        >\n          {numChildren > 0 && children}\n        </div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport { Dictionary, MpSdk, Sweep } from '../../mp/sdk';\nimport './Menu.scss';\nimport Accordion from '../reusables/accordion/Accordion';\nimport AccordionGroup from '../reusables/accordion/AccordionGroup';\nimport AccordionItem from '../reusables/accordion/AccordionItem';\nimport { SweepAlias } from '../sweepAliases';\nimport Icon from '../reusables/icon/Icon';\n\ninterface MenuProps {\n  currSweepId?: string;\n  selectedSweepId?: string;\n  sweepData: Sweep.SweepData[];\n  sweepAlias?: SweepAlias;\n  floorMap?: Dictionary<MpSdk.Floor.FloorData>;\n  onChange: (e: any) => void;\n  onClose: () => void;\n  onChangeLang: (e: any) => void;\n}\n\ninterface MenuState {\n  sweepGroups: SweepGroups;\n}\n\ninterface SweepGroups {\n  [group: string]: Sweep.SweepData[];\n}\n\n/**\n * Component for UI elements like sweep selector, location info, etc.\n */\nexport default class Menu extends Component<MenuProps, MenuState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sweepGroups: {},\n    };\n  }\n\n  private getGroups() {\n    const { sweepData, sweepAlias } = this.props;\n    const groups: SweepGroups = {};\n    for (const s of sweepData) {\n      if (sweepAlias && !(s.sid in sweepAlias)) continue; // skip sweeps without alias, if available\n      const floor = '' + s.floor;\n      if (!(floor in groups)) {\n        groups[floor] = [];\n      }\n      groups[floor].push(s);\n    }\n    return groups;\n  }\n\n  private renderItem(s: Sweep.SweepData) {\n    const { onChange, selectedSweepId, sweepAlias } = this.props;\n    const { sid } = s;\n    const name = sweepAlias ? sweepAlias[sid] : sid; // replace sid with alias, if available\n    return (\n      <AccordionItem\n        header={name}\n        onClick={() => onChange(sid)}\n        selected={sid === selectedSweepId}\n        key={sid}\n      />\n    );\n  }\n\n  /**\n   * Renders sweeps grouped by floors.\n   * @returns List of `<AccordionGroup>` with items inside.\n   */\n  private renderGroups() {\n    const { selectedSweepId, floorMap } = this.props;\n    const sweepGroups = this.getGroups();\n    const floors: any = [];\n    let selectedFloor = undefined;\n\n    for (const [floor, sweeps] of Object.entries(sweepGroups)) {\n      if (!(floor in floors)) floors[floor] = [];\n      \n      const items = []\n      for (const s of sweeps) {\n        items.push(this.renderItem(s));\n        if (s.sid === selectedSweepId) {\n          selectedFloor = s.floor;\n        }\n      }\n\n      const floorName = floorMap?.[floor]?.name;\n      const floorSequence = floorMap?.[floor]?.sequence;\n\n      // use floor name, 1-indexed sequence, id in that order of priority\n      const header = floorName ||\n        (floorSequence !== undefined && `Floor ${floorSequence+1}`) ||\n        floor;\n\n      floors.push(\n        <AccordionGroup\n          header={header}\n          expanded={!!selectedFloor && ''+selectedFloor === floor}\n          showNumber={true}\n          key={floor}\n        >\n          {items}\n        </AccordionGroup>\n      );\n    }\n    return floors;\n  }\n\n  public renderLanguageSelect() {\n    return (\n      <div style={{ marginLeft: 'auto' }}>\n        <select\n          onChange={this.props.onChangeLang}>\n          <option value=\"en\">English</option>\n          <option value=\"es\">Español</option>\n          <option value=\"fr\">Français</option>\n          <option value=\"de\">Deutsch</option>\n          <option value=\"ru\">Русский</option>\n          <option value=\"zh\">中文</option>\n          <option value=\"ja\">日本語</option>\n          <option value=\"nl\">Nederlands</option>\n          <option value=\"it\">Italiano</option>\n          <option value=\"pt\">Português</option>\n        </select>\n      </div>\n    );\n  }\n  \n  public render() {\n    const { onClose } = this.props;\n    return (\n      <div className='menu'>\n        <div className='menu-header'>\n          <div className='menu-header-text header-font'>Sweeps</div>\n          {this.renderLanguageSelect()}\n          <button type='button' className='menu-close-button' onClick={onClose}>\n            <Icon icon='close' />\n          </button>\n        </div>\n        <Accordion>\n          {this.renderGroups()}\n        </Accordion>\n      </div>\n    );\n  }\n}","import classNames from 'classnames';\nimport { Component } from 'react';\nimport Icon from '../reusables/icon/Icon';\nimport './MenuButton.scss';\n\ninterface MenuButtonProps {\n  text?: string;\n  onClick: () => void;\n}\n\nexport default class MenuButton extends Component<MenuButtonProps> {\n  \n  public render() {\n    const { text, onClick } = this.props;\n    return (\n      <div className='menu-button-container'>\n        <button type='button' className={classNames('menu-button', {'text-button': !!text})} onClick={onClick}>\n          {text ? text : \n            <Icon icon='chevron-left' />\n          }\n        </button>\n      </div>\n    );\n  }\n}","import { Dictionary, MpSdk, Vector3 } from \"../mp/sdk\";\n\n/**\n * This module is for general helper interfaces, types, and methods.\n */\n\n/**\n * Euclidean distance between two points.\n * @param {Vector3} p1 \n * @param {Vector3} p2 \n * @returns {number}\n */\nexport function distance(p1: Vector3, p2: Vector3): number {\n  return Math.sqrt((p1.x - p2.x)**2 + (p1.y - p2.y)**2 + (p1.z - p2.z)**2);\n}\n\nexport function sweepIdToPoint(id: string, sweepData: Dictionary<MpSdk.Sweep.ObservableSweepData>): Vector3 {\n  return sweepData[id].position;\n}\n\n/**\n * Returns a number clamped to the given range.\n * @param {number} num The number to clamp.\n * @param {number} min The lower bound of the range.\n * @param {number} max The upper bound of the range.\n */\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max);\n}\n\nexport {};","import { Sweep, Vector3 } from '../mp/sdk';\nimport { distance } from './utils';\n\n/**\n * Path given by `findShortestPath` as list of sweep ids. It's a separate type\n * just in case the return type changes.\n */\nexport type SweepPath = string[];\n\n/**\n * Graph as adjacency list, with sweep ids mapping to a list of neighboring ids,\n * who each map to corresponding distances.\n */\ninterface SweepGraph {\n  [a_id: string]: AdjacencyNode;\n}\ninterface AdjacencyNode {\n  [b_id: string]: number;\n}\n\nexport interface SweepPositions {\n  [id: string]: Vector3;\n}\n\nexport default class Pathfinder {\n\n  private VERT_THRESHOLD = 0.5; // penalize sweeps vertically separated by this distance, in meters\n  private HORZ_THRESHOLD = 10.0; // penalize sweeps horizontally separated by this distance, in meters\n\n  private graph: SweepGraph = {};\n  public path: SweepPath = [];\n\n  private sweepPositions: SweepPositions = {};\n\n  constructor(sweepData: Sweep.SweepData[]) {\n    // init sweepPositions\n    sweepData.forEach(sweep => this.sweepPositions[sweep.sid] = sweep.position);\n    this.createGraph(sweepData);\n  }\n\n  /**\n   * Generate graph of sweep distances.\n   * @param {Sweep.SweepData[]} sweeps List of sweep data, such as `sdk.Model.getData().sweeps`\n   */\n  private createGraph(sweeps: Sweep.SweepData[]): void {\n    const graph: SweepGraph = {};\n    for (let i = 0; i < sweeps.length; i++) {\n      const sweep_a = sweeps[i];\n      const adj: AdjacencyNode = {};\n      const neighbor_sids = sweep_a.neighbors;\n      for (let j = 0; j < neighbor_sids.length; j++) {\n        const sweep_b_sid = neighbor_sids[j];\n        const d = distance(sweep_a.position, this.sweepPositions[sweep_b_sid]);\n        adj[sweep_b_sid] = d;\n      }\n      graph[sweep_a.sid] = adj;\n    }\n    this.graph = graph;\n  }\n\n  /**\n   * Heuristic function for A*. Just take Euclidean distance.\n   */\n  private heuristic(i_sid: string, j_sid: string): number {\n    const { sweepPositions } = this;\n    return distance(sweepPositions[i_sid], sweepPositions[j_sid]);\n  }\n\n  /**\n   * Additional penalty to avoid large vertical/horizontal jumps.\n   */\n  private penalty(i_sid: string, j_sid: string): number {\n    const { sweepPositions } = this;\n    return ((sweepPositions[i_sid].y - sweepPositions[j_sid].y) / this.VERT_THRESHOLD) ** 4\n      + (((sweepPositions[i_sid].x - sweepPositions[j_sid].x) ** 2 + (sweepPositions[i_sid].z - sweepPositions[j_sid].z) ** 2) / this.HORZ_THRESHOLD);\n  }\n\n  /**\n   * Find shortest path between two sweeps connected by valid movements.\n   * @param {string} a_sid SID of starting sweep.\n   * @param {string} b_sid SID of ending sweep.\n   * @returns {SweepPath} Path from `a_sid` to `b_sid`.\n   */\n  public async findShortestPath(a_sid: string, b_sid: string): Promise<SweepPath | undefined> {\n\n    const { graph } = this;\n\n    // check SIDs are valid\n    if (graph[a_sid] === undefined || graph[b_sid] === undefined) {\n      console.error('Sweep SID(s) is invalid.');\n      return;\n    }\n\n    const ht: any = {}; // hash table that stores the following info for each encountered sweep:\n    ht[a_sid] = { visited: false, distance: 0, cost: 0, parent: null };\n\n    // loop A* algorithm\n    let debug_n = 0; // count number of iterations\n\n    while (true) {\n      debug_n += 1;\n      // find unvisited sweep with minimum cost = distance + heuristic\n      // TODO: optimize with priority queue\n      let min_sid;\n      const encountered_sids = Object.keys(ht);\n      for (let i = 0; i < encountered_sids.length; i++) {\n        const sid = encountered_sids[i];\n        if (!ht[sid].visited && (min_sid === undefined || ht[sid].cost < ht[min_sid].cost)) {\n          min_sid = sid;\n        }\n      }\n      if (min_sid === undefined) {\n        console.error('Could not find path; sweeps are not connected.');\n        return;\n      }\n      // check if sweep is ending point\n      if (min_sid === b_sid) {\n        break;\n      }\n      // add all neighbors of `min_sid`\n      ht[min_sid].visited = true;\n      const neighbor_sids = Object.keys(graph[min_sid]);\n      for (let i = 0; i < neighbor_sids.length; i++) {\n        const sid = neighbor_sids[i];\n        const dist = ht[min_sid].distance + graph[min_sid][sid];\n        const cost = dist + this.penalty(min_sid, sid) + this.heuristic(sid, b_sid);\n        if (sid in ht) { // if sweep has been encountered\n          if (!ht[sid].visited && (ht[sid].cost > cost)) { // if not visited and smaller cost, then update\n            ht[sid].parent = min_sid;\n            ht[sid].distance = dist;\n            ht[sid].cost = cost;\n          }\n        } else { // if sweep has not been encountered yet\n          ht[sid] = { visited: false, distance: dist, cost: cost, parent: min_sid };\n        }\n      }\n    }\n    console.log(`Pathfind iterations: ${debug_n}`);\n\n    // traverse graph back to starting point\n    let sid = b_sid;\n    const path: string[] = [sid];\n    while (ht[sid].parent !== null) {\n      sid = ht[sid].parent as string;\n      path.push(sid);\n    }\n    path.reverse();\n    return path;\n\n  }\n}","export default class Translator {\n\n  private url: string = \"https://api-free.deepl.com/v2/translate\";\n  private key: string = \"1fa4cd0a-7872-2cc0-e6e3-e96c6587ca62:fx\";\n\n  constructor(lang: string) {\n    this.url += `?auth_key=${this.key}&target_lang=${lang}`;\n  }\n\n  /**\n   * Smoketest for DeepL HTTP requests\n   */\n  public testQuery(): boolean {\n    const xhr = new XMLHttpRequest();\n    let query = this.url + `&text=`;\n    xhr.open(\"GET\", query, false); // synchronous request\n    xhr.send(); \n    let status = xhr.status;\n    return status === 0 || (status >= 200 && status < 400);\n  }\n\n  public checkUsage(): void {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", `https://api-free.deepl.com/v2/usage?auth_key=${this.key}`);\n    xhr.onload = () => {\n      if (xhr.readyState === 4) {\n        const status = xhr.status;\n        if (status === 0 || (status >= 200 && status < 400)) {\n          console.log(\"DeepL Usage:\", xhr.responseText);\n        } else {\n          console.error(\"Usage retrieval failed.\")\n        }\n      }\n    }\n    xhr.send();\n  }\n\n  /**\n   * Translate using DeepL via HTTP request\n   * @param texts List of strings to translate\n   * @param callBack Callback handling translated strings\n   */\n  public translate(\n    texts: string[], \n    callBack: (newTexts: string[]) => void,\n  ){\n    const xhr = new XMLHttpRequest();\n    let query = this.url;\n    for (let i=0; i<texts.length; i++) {\n      query += `&text=${texts[i]}`;\n    }\n    xhr.open(\"GET\", query); \n    xhr.onload = () => {\n      if (xhr.readyState === 4) {\n        const status = xhr.status;\n        if (status === 0 || (status >= 200 && status < 400)) {\n          const json = xhr.responseText;\n          callBack(this.parse(json));\n        } else {\n          console.error(\"Translation failed.\")\n        }\n      }\n    }\n    xhr.send();\n  }\n\n  /**\n   * Parse the JSON received from DeepL. Returns translated texts, as a list.\n   */\n  private parse(json: string): string[] {\n    const obj = JSON.parse(json);\n    const transTexts = [];\n    for (let i=0; i<obj.translations.length; i++) {\n      transTexts.push(obj.translations[i].text);\n    }\n    return transTexts;\n  }\n\n}\n","import { Color, Vector3 } from '../../mp/sdk';\nimport { distance } from '../utils';\n\ninterface PathRendererInputs {\n  visible: boolean;\n  path: Vector3[];\n  radius: number;\n  color: Color | number;\n  opacity: number;\n  heightOffset: number;\n  stepMultiplier: number;\n}\n\ninterface PathRendererOutputs {\n  objectRoot: any;\n  curve: any;\n  distance: number;\n}\n\nclass PathRenderer {\n\n  private material: any;\n\n  private inputs: PathRendererInputs = {\n    visible: false,\n    path: [], // positions on path\n    radius: 0.15,\n    color: 0xff3158,\n    opacity: 0.5,\n    heightOffset: -1.1,\n    stepMultiplier: 5,\n  };\n\n  private context: any;\n\n  private outputs = {\n    curve: null,\n    distance: 0,\n  } as PathRendererOutputs;\n\n  public onInit = async () => {\n\n    const THREE = this.context.three;\n\n    const { path,\n            radius,\n            heightOffset,\n            opacity,\n            color,\n            stepMultiplier } = this.inputs;\n\n    // check if path is long enough and no undefined points\n    if (path.length < 2 || !path.every(p => !!p)) return;\n    \n    let d = 0;\n    const points = path.map((p, i) => {\n      if (i > 0) {\n        d += distance(path[i-1], p);\n      }\n      return new THREE.Vector3(p.x, p.y+heightOffset, p.z);\n    });\n    const spline = new THREE.CatmullRomCurve3(points);\n\n    const extrudeSettings = {\n        steps: stepMultiplier * path.length,\n        bevelEnabled: false,\n        extrudePath: spline,\n    };\n\n    // Shape to extrude\n    const arcShape = new THREE.Shape().absarc(0, 0, radius, 0, Math.PI * 2, false);\n    \n    const extrudeGeometry = new THREE.ExtrudeGeometry( arcShape, extrudeSettings );\n    \n    this.material = new THREE.MeshBasicMaterial({\n        color: color as number,\n        transparent: true,\n        opacity: opacity,\n    });\n\n    const pathMesh = new THREE.Mesh(extrudeGeometry, this.material);\n\n    this.outputs.objectRoot = pathMesh;\n    this.outputs.curve = spline;\n    this.outputs.distance = d;\n  };\n\n  public onEvent = function(_type: any, _data: any) {\n  }\n\n  public onInputsUpdated = function(_previous: any) {\n  };\n\n  public onTick = function(_tickDelta: any) {\n  };\n\n  public onDestroy = () => {\n    this.material?.dispose();\n  };\n}\n\nexport const pathRendererType = 'sdk-component.pathRenderer';\nexport function PathRendererFactory() {\n  return new PathRenderer();\n}","import { Vector3 } from '../../mp/sdk';\nimport { clamp } from '../utils';\n\ntype Euler = {\n\tx: number;\n\ty: number;\n\tz: number;\n  order: string;\n};\n\ninterface CameraControllerInputs {\n  curve: any, \n  speed: number, \n  verticalOffset: number, \n  enabled: boolean, \n  changeUCallback: (u: number) => void, \n}\n\ninterface CameraControllerOutputs {\n  camera: any,\n}\n\nclass CameraController {\n\n  private u: number = 0; // number in [0, 1] representing position along curve\n  private length: number = 0; // length of curve\n  private up: undefined | Vector3;\n\n  private inputs: CameraControllerInputs = {\n    curve: null, // THREE.Curve object\n    speed: 1.5, // speed in meters per second\n    verticalOffset: 1., // vertical offset from curve\n    enabled: false, // true to move forward automatically, false to pause\n    changeUCallback: (u) => null, // callback eahc time u changes\n  };\n\n  private outputs = {\n    camera: null,\n  } as CameraControllerOutputs;\n\n  private context: any;\n\n  /**\n   * Given u along curve, return position and rotation for camera.\n   */\n  private getPoseAt(u: number): {position: Vector3, rotation: Euler} {\n    const { curve, speed, verticalOffset } = this.inputs;\n    const THREE = this.context.three;\n    // position\n    const uPast = Math.max(u - 0.1 * speed / this.length, 0); // 0.1 second in past\n    const uFuture = Math.min(u + speed / this.length, 1); // 1 second in the future\n    const position = curve.getPointAt(u);\n    position.y += verticalOffset; // add vertical offset;\n    const positionPast = curve.getPointAt(uPast);\n    const positionFuture = curve.getPointAt(uFuture);\n    // rotation\n    const matrix = new THREE.Matrix4().lookAt(positionPast, positionFuture, this.up);\n    const rotation = new THREE.Euler().setFromRotationMatrix(matrix, \"YXZ\");\n    return { position, rotation };\n  }\n\n  /**\n   * Set camera pose.\n   */\n  private setCamera(position: Vector3, rotation: Euler) {\n    const { camera } = this.outputs;\n    camera.position.copy(position);\n    camera.rotation.copy(rotation);\n    camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Manually set u for camera.\n   */\n  public setU(u: number) {\n    this.u = u;\n    const { position, rotation } = this.getPoseAt(u);\n    this.setCamera(position, rotation);\n    this.inputs.changeUCallback(u);\n  }\n\n  // --- IComponent methods ----------------------------------------------------\n\n  public onInit = async () => {\n    const { curve } = this.inputs;\n    const THREE = this.context.three;\n\n    const camera = new THREE.PerspectiveCamera( 45, 1.333, 1, 1000 );\n    this.outputs.camera = camera;\n    this.length = curve.getLength() - 1;\n    this.up = new THREE.Vector3(0, 1, 0);\n  };\n\n  public onTick = async (tickDelta: number) => {\n    const { speed, enabled } = this.inputs;\n    if (enabled) {\n      this.u = clamp(this.u + speed * (tickDelta/1000) / this.length, 0, 1);\n      const { u } = this;\n      const { position, rotation } = this.getPoseAt(u);\n      this.setCamera(position, rotation);\n      this.inputs.changeUCallback(u);\n    }\n  };\n\n  public onDestroy = function() {\n  };\n}\n\nexport const cameraControllerType = 'sdk-component.cameraController';\nexport function CameraControllerFactory() {\n  return new CameraController();\n}\n","import { MpSdk } from \"../../mp/sdk\";\nimport { PathRendererFactory, pathRendererType } from \"./PathRenderer\";\nimport { CameraControllerFactory, cameraControllerType } from \"./CameraController\";\n\n/**\n * Registers all SDK Scene components.\n * @param {MpSdk} sdk\n */\n\nexport const initComponents = async (sdk: MpSdk | any) => {\n  await Promise.all([\n    sdk.Scene.register(pathRendererType, PathRendererFactory),\n    sdk.Scene.register(cameraControllerType, CameraControllerFactory),\n  ]);\n}","\nexport interface SweepAlias {\n  [sid: string]: string;\n}\n\nconst robinsonHall: SweepAlias = {\n  \"36642185cf3f481897967d749003d683\": \"Great Hall\",\n  \"e282bc9e7ae94a58aa624c4679e71946\": \"105\",\n  \"03dbddfa78074195ad605033e1a5ea88\": \"106\",\n  \"ecf49427817f4ad2a18971bd836f577a\": \"107\",\n  \"233c8a90b0d44803b451cc18c2beb2ac\": \"125: History Department Conference Room\",\n  \"7f3f51d4c0b9448f9e5c78a9882fe912\": \"222\",\n  \"5c19c240375d4d04a6c9ca790a35fa02\": \"223\",\n  \"c2096fe91b2543f78ca9d95070e78e63\": \"225: History Department Graduate Lounge\",\n  \"1b11bb808949421ba32142f4c48b9823\": \"B21: Warren Center Conference Room\",\n};\n\nexport const sweepAliases: any = {\n  \"GycExKiYVFp\": robinsonHall,\n}\n","import React, { Component } from 'react';\nimport { clamp } from '../../utils';\nimport './ProgressBar.scss';\n\nconst PROGRESS_BAR_THUMB_SIZE = '14px';\n\ninterface ProgressBarProps {\n  min: number;\n  max: number;\n  initValue?: number;\n  overrideValue?: number;\n  scrub?: boolean;\n  step?: number;\n  noThumb?: boolean;\n  onMouseDown?: (value: number) => void;\n  onMouseUp?: (value: number) => void;\n  onChange?: (value: number) => void;\n}\n\ninterface ProgressBarState {\n  value: number; // will always match overrideValue when passed around (see componentdidUpdate)\n  mouseDown: boolean;\n}\n\nexport default class ProgressBar extends Component<ProgressBarProps, ProgressBarState> {\n  \n  private abortController = new AbortController();\n  private trackRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: ProgressBarProps) {\n    super(props);\n    const { initValue } = props;\n    \n    this.state = {\n      value: initValue || 0,\n      mouseDown: false,\n    }\n  }\n  \n  public componentDidMount() {\n    window.addEventListener(\n      'mouseup',\n      this.onMouseUp,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n    window.addEventListener(\n      'mousemove',\n      this.onMouseMove,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n  }\n\n  public componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  public componentDidUpdate(prevProps: ProgressBarProps, prevState: ProgressBarState) {\n    if (prevProps.overrideValue !== prevState.value && this.props.overrideValue) {\n      this.setState({ value: this.props.overrideValue });\n    }\n  }\n\n  /**\n   * Calculates value of progress bar from mouse position.\n   * @param mx Mouse X position.\n   * @returns Clamped value based on min/max, or current value iff ref is undefined.\n   */\n  private calculate(mx: number): number {\n    const { min, max } = this.props;\n    const { value } = this.state;\n    const track = this.trackRef.current;\n    if (!track) return value;\n\n    const rect = track.getBoundingClientRect();\n    const dx = mx - rect.left;\n    const total = rect.right - rect.left;\n    const frac = dx / total;\n    const range = max - min;\n    \n    return clamp(frac * range, min, max);\n  }\n\n  private onMouseDown = (e: any) => {\n    const { onMouseDown, onChange } = this.props;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    const value = this.calculate(ev.clientX);\n    onMouseDown?.(value);\n    onChange?.(value);\n    this.setState({ value: value, mouseDown: true });\n  }\n\n  private onMouseUp = (e: any) => {\n    const { onMouseUp } = this.props;\n    const { value, mouseDown, } = this.state;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    if (mouseDown) {\n      onMouseUp?.(value);\n    }\n    this.setState({ mouseDown: false });\n  }\n\n  private onMouseMove = (e: any) => {\n    const { scrub, onChange, } = this.props;\n    const { mouseDown } = this.state;\n    if (!scrub || !mouseDown) return;\n\n    const ev = e as MouseEvent;\n    const value = this.calculate(ev.clientX);\n    this.setState({ value: value }, () => onChange?.(value))\n  }\n\n  public render() {\n    const {\n      min,\n      max,\n      overrideValue,\n      noThumb,\n    } = this.props;\n    const {\n      value,\n      mouseDown\n    } = this.state;\n\n    const frac = (overrideValue || value) / (max - min);\n    const percent = frac * 100;\n\n    return (\n      <div className='progress-bar-container'>\n        <div className='progress-bar-track-container'>\n          <div\n            className='progress-bar-track'\n            onMouseDown={this.onMouseDown}\n            ref={this.trackRef}\n          >\n            <div\n              className='progress-bar-progress'\n              style={{\n                width: `${percent}%`\n              }}\n            ></div>\n          </div>\n        </div>\n        { !noThumb &&\n          <div\n            className='progress-bar-thumb'\n            style={{\n              width: PROGRESS_BAR_THUMB_SIZE,\n              height: PROGRESS_BAR_THUMB_SIZE,\n              left: `calc(${percent}% - (${PROGRESS_BAR_THUMB_SIZE}/2))`,\n            }}\n            onMouseDown={(e) => {this.onMouseDown(e); console.log('down')}}\n          ></div>\n        }\n        {/* Needed so mousemove fires even when over the {pointer-events: none} canvas */}\n        <div className='pointer-event-overlay'\n          style={{\n            position: 'fixed',\n            inset: '0',\n            pointerEvents: 'all',\n            display: mouseDown ? 'block' : 'none',\n          }}\n        ></div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport Icon from '../../reusables/icon/Icon';\nimport './ControlsOverlay.scss';\nimport ProgressBar from './ProgressBar';\n\ninterface ControlsOverlayProps {\n  playing: boolean;\n  onPlay: () => void;\n  onPause: () => void;\n  onExit: () => void;\n  setU: (u: number) => void;\n  u: number;\n}\n\ninterface ControlsOverlayState {\n  rememberPlayState: boolean;\n}\n\nexport default class ControlsOverlay extends Component<ControlsOverlayProps, ControlsOverlayState> {\n\n  constructor(props: ControlsOverlayProps) {\n    super(props);\n    this.state = {\n      rememberPlayState: props.playing,\n    }\n  }\n\n  private onScrubMouseDown = () => {\n    this.props.onPause();\n  }\n\n  private onScrubMouseUp  = () => {\n    if (this.state.rememberPlayState) {\n      this.props.onPlay();\n    }\n  }\n\n  private togglePlay = () => {\n    const { playing, onPlay, onPause } = this.props;\n    playing ? onPause() : onPlay();\n    this.setState({ rememberPlayState: !playing })\n  }\n\n  public render() {\n    const { playing, onExit, setU, u } = this.props;\n\n    return (\n      <div className='controls-overlay-container'>\n        <div className='controls-overlay'>\n          <ProgressBar\n            min={0}\n            max={1}\n            scrub={true}\n            onChange={setU}\n            onMouseDown={this.onScrubMouseDown}\n            onMouseUp={this.onScrubMouseUp}\n            overrideValue={u}\n          />\n          <div className='control-button-container'>\n            <button type='button'\n              className='control-button play-button'\n              onClick={this.togglePlay}\n            >\n              <Icon icon={playing ? 'showcase-pause-lg' : 'showcase-play-lg'} classes='play-pause-button' />\n            </button>\n            <button type='button' className='control-button exit-button' onClick={onExit}>\n              <Icon icon='close' />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}","import { Component } from 'react';\nimport './FlyModeButton.scss';\n\ninterface FlyModeButtonProps {\n  onClick: () => void;\n}\n\nexport default class FlyModeButton extends Component<FlyModeButtonProps> {\n  public render() {\n    const { onClick } = this.props;\n    return (\n      <div className='flymode-button-container'>\n        <button className='flymode-button' onClick={onClick}>Fly Mode</button>\n      </div>\n    );\n  }\n}","import classNames from 'classnames';\nimport { Component } from 'react';\nimport './IconButton.scss';\nimport Icon from '../icon/Icon';\n\ninterface IconButtonProps {\n  onClick: () => void;\n  icon: string;\n  classes?: string[]\n}\n\nexport default class IconButton extends Component<IconButtonProps> {\n  public render() {\n    const { onClick, icon, classes } = this.props;\n\n    return (\n      <div className={classNames('icon-button-container', classes)}>\n        <button\n          type='button'\n          className='icon-button'\n          onClick={onClick}\n        >\n          <Icon icon={icon} />\n        </button>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { GetSDK } from '../mp/GetSDK';\nimport { Dictionary, MpSdk, Sweep } from '../mp/sdk';\nimport './App.scss';\nimport Frame from './Frame';\nimport Menu from './ui/Menu';\nimport MenuButton from './ui/MenuButton';\nimport Pathfinder from './Pathfinder';\nimport Translator from './Translator';\nimport { initComponents } from './sdk-components';\nimport { pathRendererType } from './sdk-components/PathRenderer';\nimport { cameraControllerType } from './sdk-components/CameraController';\nimport { sweepIdToPoint } from './utils';\nimport { SweepAlias, sweepAliases } from './sweepAliases';\nimport ControlsOverlay from './ui/overlay/ControlsOverlay';\nimport FlyModeButton from './ui/overlay/FlyModeButton';\nimport IconButton from './reusables/icon-button/IconButton';\n\nexport interface Sdk extends MpSdk {\n  Scene?: any;\n}\n\ninterface AppState {\n  currSweepId?: string;\n  selectedSweepId?: string;\n  sweepData: Sweep.SweepData[]; // put in state because changes should trigger rerender\n  sweepMap?: Dictionary<MpSdk.Sweep.ObservableSweepData>;\n  path?: any; // put in state so path visibility updates trigger rerender\n  menuEnabled: boolean;\n  flyModeEnabled: boolean;\n  flyU: number; // integer in [0, 1] indicating position in flythrough\n  flyModePlaying: boolean;\n  floorMap?: Dictionary<MpSdk.Floor.FloorData>;\n}\n\nconst defaultUrlParams: any = {\n  m: 'GycExKiYVFp',\n  applicationKey: 'q44m20q8yk81yi0qgixrremda',\n  title: '0',\n  qs: '1',\n  hr: '0',\n  brand: '0',\n  help: '0',\n  play: '1',\n}\n\n/**\n * This is the top level class for the app. It handles API key, model ID, and url stuff,\n * and holds references to objects/modules/components for object composition.\n * Do non-initializing SDK and UI stuff in other components/files.\n */\nexport default class App extends Component<{}, AppState> {\n\n  private src: string; // the url source for the sdk\n  private lang: string | null = null;\n  private sdk?: Sdk;\n\n  private pathNode: any; // the node for the PathRenderer component\n  private pathfinder?: Pathfinder;\n\n  private sweepAlias?: SweepAlias; // human-readable alias for sweeps, if available\n\n  private flyNode: any; // the node for the CameraController component\n  private camCon: any; // CameraConroller component\n\n  constructor(props: any) {\n    super(props);\n    const queryString = this.handleUrlParams();\n    this.src = `${process.env.PUBLIC_URL}/bundle/showcase.html?${queryString}`;\n\n    this.state = {\n      sweepData: [],\n      menuEnabled: true,\n      flyModeEnabled: false,\n      flyU: 0,\n      flyModePlaying: false,\n    };\n  }\n\n  /**\n   * Parses the current url params and combines them with the default params, updating when necessary.\n   * @returns url param query string (without `?`), ready to be pasted directly into the url\n   */\n  private handleUrlParams(): string {\n    const params = new URLSearchParams(window.location.search);\n    this.lang = params.get('lang');\n    for (const [k, v] of Object.entries(defaultUrlParams)) {\n      if (!params.has(k)) {\n        params.append(k, ''+v); // convert v to string\n      }\n    }\n    return params.toString();\n  }\n\n  // --- React methods ---------------------------------------------------------\n\n  public async componentDidMount() {\n    \n    this.sdk = await GetSDK('showcase', defaultUrlParams.applicationKey);\n    await initComponents(this.sdk);\n\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    // Add user-generated Mattertags to the default model\n    // In production, this block will be removed\n    await this.sdk.Model.getData().then( async (data) => {\n      if (data.sid === 'GycExKiYVFp') {\n        const mattertags = [];\n        mattertags.push(\n          {\n            label: \"Revitalizing the Great Hall\",\n            description: \"Within the building’s Great Hall, new vestibule spaces were created to \"+\n              \"connect the main circulation corridor to new restrooms. Elevator lobbies and \"+\n              \"office suite entrances were treated as extensions of the original McKim design, \"+\n              \"with matching marble flooring and wall base, and stained oak millwork-encased \"+\n              \"openings. The installation of fire sprinklers throughout the building helped call \"+\n              \"attention to new opportunities for restoring spatial clarity; obsolete steel and \"+\n              \"wired glass partitions installed in the main corridor in the 1970s were removed, \"+\n              \"opening up the axial hallway to its original extents and further enhancing spatial \"+\n              \"connectivity.\",\n            anchorPosition: {x: 16.55, y: 1.28-1.5, z: 6.69},\n            stemVector: { x: 0, y: 1, z: 0 },\n          }\n        );\n        await this.sdk?.Mattertag.add(mattertags);\n      }\n    });\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    this.sdk.Model.getData().then( (data) => {\n      const sweepData = data.sweeps;\n      this.pathfinder = new Pathfinder(sweepData);\n      this.setState({\n        sweepData: sweepData,\n      });\n      this.sweepAlias = sweepAliases[data.sid];\n    });\n\n    this.sdk.Sweep.data.subscribe({\n      onCollectionUpdated: (collection: Dictionary<MpSdk.Sweep.ObservableSweepData>) => {\n        this.setState({\n          sweepMap: collection\n        });\n      },\n    });\n\n    this.sdk.Floor.data.subscribe({\n      onCollectionUpdated: (collection: Dictionary<MpSdk.Floor.FloorData>) => {\n        this.setState({\n          floorMap: collection,\n        });\n      }\n    })\n\n    this.sdk.Sweep.current.subscribe((currentSweep: any) => {\n      if (currentSweep.sid) console.log(currentSweep.sid, currentSweep.position);\n      this.setState({\n        currSweepId: currentSweep.sid,\n      });\n    });\n\n    // translate all mattertags\n    this.translateMattertags();\n  }\n\n  public componentDidUpdate(_prevProps: any, prevState: AppState) {\n    const { currSweepId, selectedSweepId } = this.state;\n\n    // only update path if sweep state changes\n    (currSweepId !== prevState.currSweepId ||\n    selectedSweepId !== prevState.selectedSweepId) &&\n    this.handlePath();\n  }\n\n  // --- SDK methods -----------------------------------------------------------\n\n  private onOptionSelect = (id: string) => {\n    if (id === this.state.selectedSweepId) {\n      this.clearSelection();\n    } else {\n      this.setState({\n        selectedSweepId: id,\n      });\n    }\n  }\n\n  private async handlePath() {\n    const { currSweepId, selectedSweepId, sweepMap } = this.state;\n    const { sdk, pathfinder } = this;\n\n    if (sdk && sweepMap && currSweepId && selectedSweepId && pathfinder) {\n      const path = await pathfinder.findShortestPath(currSweepId, selectedSweepId);\n      if (!path) return;\n      if (this.pathNode) this.pathNode.stop();\n      this.pathNode = await sdk.Scene.createNode();\n      this.setState ({\n        path: path.length > 1 ? this.pathNode.addComponent(pathRendererType, {\n          path: path.map(id => sweepIdToPoint(id, sweepMap)),\n          opacity: 0.7,\n          radius: 0.12,\n          stepMultiplier: 10,\n        }) : undefined,\n      });\n      this.pathNode.start();\n    }\n  }\n\n  private clearSelection = () => {\n    if (this.pathNode) this.pathNode.stop();\n    this.setState({\n      path: undefined,\n      selectedSweepId: undefined,\n    });\n  }\n\n  private toggleFlyMode = async () => {\n    const { flyModeEnabled } = this.state;\n    this.setState({\n      flyModeEnabled: !flyModeEnabled,\n      flyU: 0,\n    }, async () => {\n      if (flyModeEnabled) {\n        await this.exitFly();\n      } else {\n        await this.initFly();\n      }\n    });\n  };\n\n  private initFly = async () => {\n    const { sdk } = this;\n    const { path } = this.state;\n\n    if (sdk && path) {\n      if (this.flyNode) this.flyNode.stop();\n      this.flyNode = await sdk.Scene.createNode();\n      this.camCon = this.flyNode.addComponent(cameraControllerType, {\n        changeUCallback: (u: number) => this.setState({flyU: u}),\n      });\n      const cam = this.flyNode.addComponent('mp.camera', {\n        enabled: true,\n      });\n      this.camCon.bind('curve', path, 'curve');\n      cam.bind('camera', this.camCon, 'camera');\n      this.flyNode.start();\n\n      // orient camera to start of flythrough\n      const { position, rotation } = this.camCon.getPoseAt(0);\n      await sdk.Mode.moveTo(sdk.Mode.Mode.DOLLHOUSE, {\n        position,\n        rotation: {x: rotation.x*180/Math.PI, y: rotation.y*180/Math.PI},\n      });\n\n      // start flythough\n      this.setState({flyU: 0});\n      this.playFly();\n    }\n  };\n\n  private exitFly = async () => {\n    const { sdk, flyNode } = this;\n    if (flyNode) flyNode.stop();\n    if (sdk) sdk.Mode.moveTo(sdk.Mode.Mode.INSIDE);\n    this.setState({ flyModePlaying: false, });\n  };\n\n  private playFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = true;\n    this.setState({ flyModePlaying: true, });\n  };\n  private pauseFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = false;\n    this.setState({ flyModePlaying: false, });\n  };\n  private setFlyU = (u: number) => {if (this.camCon) this.camCon.setU(u)};\n\n  private toggleMenu = () => {\n    this.setState({\n      menuEnabled: !this.state.menuEnabled,\n    });\n  }\n\n  private async translateMattertags() {\n    const { sdk, lang } = this;\n\n    if (sdk && lang) {\n      const Trans = new Translator(lang);\n      //if (Trans.testQuery()) { // check HTTP request works\n      const mattertagData = await sdk.Mattertag.getData();\n      for (let i=0; i<mattertagData.length; i++) {\n        const { sid, label, description, media } = mattertagData[i];\n        const callBack = (newTexts: string[]) => {\n          const [ newLabel, newDescription] = newTexts;\n          sdk.Mattertag.editBillboard(sid, {\n            label: newLabel, \n            description: newDescription, \n            media,\n          });\n        };\n        Trans.translate([label, description], callBack);\n        //}\n      }\n      Trans.checkUsage();\n    }\n  }\n\n  private async changeLang(lang: string) {\n    this.lang = lang;\n    this.translateMattertags();\n  }\n\n  // --- Render ----------------------------------------------------------------\n\n  public render() {\n    const {\n      currSweepId,\n      selectedSweepId,\n      sweepData,\n      menuEnabled,\n      flyModeEnabled,\n      flyU,\n      path,\n      flyModePlaying,\n      floorMap,\n    } = this.state;\n\n    return (\n      <div className='app'>\n        <div id='frame-container'>\n          <Frame src={this.src} disableClicks={flyModeEnabled} />\n          <div id='overlay-container'>\n            {/* Put all showcase overlay components here */}\n            { path && (\n              flyModeEnabled ?\n              <ControlsOverlay\n                playing={flyModePlaying}\n                onPlay={this.playFly}\n                onPause={this.pauseFly}\n                onExit={this.toggleFlyMode}\n                setU={this.setFlyU}\n                u={flyU}\n              /> \n              :\n              <div className='nofly-button-container'>\n                <FlyModeButton onClick={this.toggleFlyMode} />\n                <IconButton onClick={this.clearSelection} icon='close' classes={['clear-button']} />\n            </div>\n            )}\n          </div>\n        </div>\n        { !menuEnabled &&\n          <MenuButton onClick={this.toggleMenu} />\n        }\n        { menuEnabled &&\n          <Menu\n            currSweepId={currSweepId}\n            selectedSweepId={selectedSweepId}\n            sweepData={sweepData}\n            sweepAlias={this.sweepAlias}\n            floorMap={floorMap}\n            onChange={this.onOptionSelect}\n            onClose={this.toggleMenu}\n            onChangeLang={(e) => this.changeLang(e.target.value)}\n          />\n        }\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}