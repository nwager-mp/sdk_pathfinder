{"version":3,"sources":["mp/GetSDK.ts","app/Frame.tsx","app/reusables/accordion/Accordion.tsx","app/reusables/accordion/AccordionItem.tsx","app/reusables/icon/Icon.tsx","app/reusables/accordion/AccordionGroup.tsx","app/ui/Menu.tsx","app/ui/MenuButton.tsx","app/utils.ts","app/Pathfinder.ts","app/Translator.ts","app/sdk-components/PathRenderer.ts","app/sdk-components/CameraController.ts","app/sdk-components/index.ts","app/sweepAliases.ts","app/ui/overlay/ProgressBar.tsx","app/ui/overlay/ControlsOverlay.tsx","app/ui/overlay/FlyModeButton.tsx","app/App.tsx","index.tsx"],"names":["GetSDK","elementId","applicationKey","Promise","resolve","reject","intervalId","setInterval","a","iframe","HTMLIFrameElement","document","getElementById","contentWindow","sdkWindow","MP_SDK","clearInterval","sdk","connect","Frame","this","props","src","id","customRef","children","disableClicks","className","title","allowFullScreen","frameBorder","ref","style","pointerEvents","undefined","Component","Accordion","header","ACCORDION_ITEM_HEIGHT","AccordionItem","body","selected","onClick","classNames","height","Icon","icon","classes","classArray","Array","isArray","AccordionGroup","state","expanded","showChildren","setState","setTimeout","showNumber","numChildren","length","hasChildren","contentHeight","Menu","sweepGroups","sweepData","sweepAlias","groups","s","sid","floor","push","onChange","selectedSweepId","name","getGroups","floors","selectedFloor","Object","entries","sweeps","items","renderItem","onClose","type","renderGroups","MenuButton","text","distance","p1","p2","Math","sqrt","x","y","z","sweepIdToPoint","position","clamp","num","min","max","Pathfinder","VERT_THRESHOLD","HORZ_THRESHOLD","graph","path","sweepPositions","forEach","sweep","createGraph","i","sweep_a","adj","neighbor_sids","neighbors","j","sweep_b_sid","d","i_sid","j_sid","a_sid","b_sid","console","error","ht","visited","cost","parent","debug_n","min_sid","encountered_sids","keys","dist","penalty","heuristic","log","reverse","Translator","lang","xhr","url","key","XMLHttpRequest","query","open","send","status","responseText","texts","json","parse","raw","obj","JSON","transTexts","translations","PathRenderer","material","inputs","visible","radius","color","opacity","heightOffset","stepMultiplier","context","outputs","curve","onInit","THREE","three","every","p","points","map","Vector3","spline","CatmullRomCurve3","extrudeSettings","steps","bevelEnabled","extrudePath","arcShape","Shape","absarc","PI","extrudeGeometry","ExtrudeGeometry","MeshBasicMaterial","transparent","pathMesh","Mesh","objectRoot","onEvent","_type","_data","onInputsUpdated","_previous","onTick","_tickDelta","onDestroy","dispose","pathRendererType","PathRendererFactory","CameraController","u","up","speed","verticalOffset","enabled","changeUCallback","camera","PerspectiveCamera","getLength","tickDelta","getPoseAt","rotation","setCamera","uPast","uFuture","getPointAt","positionPast","positionFuture","matrix","Matrix4","lookAt","Euler","setFromRotationMatrix","copy","updateProjectionMatrix","cameraControllerType","CameraControllerFactory","initComponents","all","Scene","register","sweepAliases","PROGRESS_BAR_THUMB_SIZE","ProgressBar","abortController","AbortController","trackRef","React","createRef","onMouseDown","e","ev","button","value","calculate","clientX","mouseDown","onMouseUp","onMouseMove","scrub","initValue","window","addEventListener","signal","abort","prevProps","prevState","overrideValue","mx","track","current","rect","getBoundingClientRect","left","right","noThumb","percent","width","inset","display","ControlsOverlay","onScrubMouseDown","onPause","onScrubMouseUp","rememberPlayState","onPlay","togglePlay","playing","onExit","setU","FlyModeButton","defaultUrlParams","m","qs","hr","brand","help","play","App","pathNode","pathfinder","flyNode","camCon","onOptionSelect","toggleFlyMode","flyModeEnabled","exitFly","initFly","stop","createNode","addComponent","flyU","cam","bind","start","Mode","moveTo","DOLLHOUSE","playFly","INSIDE","flyModePlaying","pauseFly","setFlyU","toggleMenu","menuEnabled","queryString","handleUrlParams","process","params","URLSearchParams","location","search","get","k","v","has","append","toString","Model","getData","then","data","mattertags","label","description","anchorPosition","stemVector","Mattertag","add","Sweep","subscribe","onCollectionUpdated","collection","sweepMap","currentSweep","currSweepId","translateMattertags","_prevProps","handlePath","findShortestPath","Trans","testQuery","mattertagData","media","translate","newLabel","newDescription","editBillboard","checkUsage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.641cfe9c.chunk.js","sourcesContent":["import { MpSdk, ShowcaseEmbedWindow } from './sdk';\n\nconst SDK_VERSION = '3.2';\n\n/**\n * Gets a reference to the SDK. Use this if you want to do SDK stuff.\n * @param {string | HTMLIFrameElement} elementId ID of the iframe or the iframe element itself\n * @param {string} applicationKey Your API key \n * @returns Promise of MpSdk reference\n */\nexport const GetSDK = function(elementId: string | HTMLIFrameElement, applicationKey: string): Promise<MpSdk> {\n  return new Promise(function(resolve, reject) {\n    const checkIframe = async function() {\n      let iframe = null;\n      if (elementId instanceof HTMLIFrameElement) {\n        iframe = elementId as HTMLIFrameElement;\n      }\n      else {\n        iframe = document.getElementById(elementId) as HTMLIFrameElement;\n      }\n\n      if (iframe) {\n        // sometimes this is undefined for some reason, so check for it\n        const sdkWindow = (await iframe.contentWindow as ShowcaseEmbedWindow).MP_SDK;\n        if (sdkWindow) {\n          clearInterval(intervalId);\n          const sdk = sdkWindow.connect(iframe, applicationKey, SDK_VERSION);\n          resolve(sdk);\n        }\n      }\n    };\n    const intervalId = setInterval(checkIframe, 100);\n  });\n}\n","import React, { Component } from 'react';\nimport './Frame.scss';\n\ninterface Props {\n  src: string;\n  id?: string;\n  customRef?: React.RefObject<HTMLIFrameElement>\n  disableClicks?: boolean;\n}\n\n/**\n * This component houses the actual Matterport IFrame element. Doesn't do anything else.\n */\nexport default class Frame extends Component<Props, {}> {\n\n  render() {\n    const {\n      src,\n      id,\n      customRef,\n      children,\n      disableClicks,\n    } = this.props;\n\n    return (\n      <div className='frame'>\n        <iframe\n          id={id || 'showcase'}\n          className='frame'\n          src={src}\n          title={'showcase'}\n          allowFullScreen={true}\n          frameBorder='0'\n          ref={customRef}\n          style={disableClicks ? { pointerEvents: 'none', } : undefined}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './Accordion.scss';\n\ninterface AccordionProps {\n  header?: string\n}\n\nexport default class Accordion extends Component<AccordionProps> {\n\n  public render() {\n    const { header, children } = this.props;\n\n    return (\n      <div className='accordion'>\n        { header &&\n          <div className='accordion-header header-font'>{header}</div>\n        }\n        <div className='accordion-groups'>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}","import classNames from 'classnames';\nimport { Component } from 'react';\nimport './AccordionItem.scss';\n\ninterface AccordionItemProps {\n  header?: string;\n  body?: string;\n  selected?: boolean;\n  onClick?: (e: any) => void;\n}\n\nexport const ACCORDION_ITEM_HEIGHT = '52px';\n\nexport default class AccordionItem extends Component<AccordionItemProps> {\n  public render() {\n    const { header, body, selected, onClick } = this.props;\n    return (\n      <div\n        className={classNames('accordion-item', {'selected': !!selected})}\n        onClick={onClick}\n        style={{ height: ACCORDION_ITEM_HEIGHT }}\n      >\n        <div className='accordion-item-details'>\n          <div className='accordion-item-header'>{header}</div>\n          <div className='accordion-item-body'>{body}</div>\n        </div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport './Icon.scss';\nimport classNames from 'classnames';\n\ninterface IconProps {\n  icon: string;\n  classes?: string | string[];\n}\n\nexport default class Icon extends Component<IconProps> {\n  public render() {\n    const { icon, classes } = this.props;\n    let classArray: string[] = [];\n    if (classes) {\n      if (Array.isArray(classes)) {\n        classArray = classes;\n      } else {\n        classArray = [classes];\n      }\n    }\n\n    return (\n      <span className={classNames('icon', 'icon-' + icon, ...classArray)} />\n    );\n  }\n}","import { Component } from 'react';\nimport classNames from 'classnames';\nimport './AccordionGroup.scss';\nimport { ACCORDION_ITEM_HEIGHT } from './AccordionItem';\nimport Icon from '../icon/Icon';\n\ninterface AccordionGroupProps {\n  header?: string;\n  expanded?: boolean;\n  showNumber?: boolean;\n}\n\ninterface AccordionGroupState {\n  expanded: boolean;\n  showChildren: boolean;\n}\n\nexport default class AccordionGroup extends Component<AccordionGroupProps, AccordionGroupState> {\n  constructor(props: any) {\n    super(props);\n    const { expanded } = this.props;\n    this.state = {\n      expanded: !!expanded,\n      showChildren: !!expanded,\n    };\n  }\n\n  private onClick = () => {\n    const { expanded, showChildren } = this.state;\n    this.setState({\n      expanded: !expanded,\n    }, () => setTimeout(() => this.setState({showChildren: !showChildren}), showChildren ? 250 : 0));\n  }\n  \n  public render() {\n    const { children, header, showNumber } = this.props;\n    const { expanded } = this.state;\n\n    let numChildren = 0;\n    if (children) {\n      if (Array.isArray(children)) {\n        numChildren = children.length;\n      } else {\n        numChildren =  1; // one child fails isArray check\n      }\n    }\n    const hasChildren = numChildren > 0;\n    const contentHeight = expanded && hasChildren ? `calc(${numChildren}*${ACCORDION_ITEM_HEIGHT})` : '0';\n\n    return (\n      <div className={classNames('accordion-group-container', {'collapsed': !expanded})}>\n        <div\n          className='accordion-group-header header-font'\n          onClick={this.onClick}\n        >\n          {'' + header + (hasChildren && showNumber ? ` (${numChildren})` : '')}\n          <Icon icon='chevron-down' />\n        </div>\n        <div\n          className={classNames('accordion-group', {\n            'collapsed': !expanded,\n          })}\n          style={{ height: contentHeight }}\n        >\n          {numChildren > 0 && children}\n        </div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport { Sweep } from '../../mp/sdk';\nimport './Menu.scss';\nimport Accordion from '../reusables/accordion/Accordion';\nimport AccordionGroup from '../reusables/accordion/AccordionGroup';\nimport AccordionItem from '../reusables/accordion/AccordionItem';\nimport { SweepAlias } from '../sweepAliases';\nimport Icon from '../reusables/icon/Icon';\n\ninterface MenuProps {\n  currSweepId?: string;\n  selectedSweepId?: string;\n  sweepData: Sweep.SweepData[];\n  sweepAlias?: SweepAlias;\n  onChange: (e: any) => void;\n  onClose?: () => void;\n}\n\ninterface MenuState {\n  sweepGroups: SweepGroups;\n}\n\ninterface SweepGroups {\n  [group: string]: Sweep.SweepData[];\n}\n\n/**\n * Component for UI elements like sweep selector, location info, etc.\n */\nexport default class Menu extends Component<MenuProps, MenuState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sweepGroups: {},\n    };\n  }\n\n  private getGroups() {\n    const { sweepData, sweepAlias } = this.props;\n    const groups: SweepGroups = {};\n    for (const s of sweepData) {\n      if (sweepAlias && !(s.sid in sweepAlias)) continue; // skip sweeps without alias, if available\n      const floor = '' + s.floor;\n      if (!(floor in groups)) {\n        groups[floor] = [];\n      }\n      groups[floor].push(s);\n    }\n    return groups;\n  }\n\n  private renderItem(s: Sweep.SweepData) {\n    const { onChange, selectedSweepId, sweepAlias } = this.props;\n    const { sid } = s;\n    const name = sweepAlias ? sweepAlias[sid] : sid; // replace sid with alias, if available\n    return (\n      <AccordionItem\n        header={name}\n        onClick={() => onChange(sid)}\n        selected={sid === selectedSweepId}\n        key={sid}\n      />\n    );\n  }\n\n  /**\n   * Renders sweeps grouped by floors.\n   * @returns List of `<AccordionGroup>` with items inside.\n   */\n  private renderGroups() {\n    const { selectedSweepId } = this.props;\n    const sweepGroups = this.getGroups();\n    const floors: any = [];\n    let selectedFloor = undefined;\n\n    for (const [floor, sweeps] of Object.entries(sweepGroups)) {\n      if (!(floor in floors)) floors[floor] = [];\n      \n      const items = []\n      for (const s of sweeps) {\n        items.push(this.renderItem(s));\n        if (s.sid === selectedSweepId) {\n          selectedFloor = s.floor;\n        }\n      }\n\n      floors.push(\n        <AccordionGroup\n          header={`Floor ${floor}`}\n          expanded={!!selectedFloor && ''+selectedFloor === floor}\n          showNumber={true}\n          key={floor}\n        >\n          {items}\n        </AccordionGroup>\n      );\n    }\n    return floors;\n  }\n  \n  public render() {\n    const { onClose } = this.props;\n    return (\n      <div className='menu'>\n        <div className='menu-header'>\n          <div className='menu-header-text header-font'>Sweeps</div>\n          { onClose &&\n            <button type='button' className='menu-close-button' onClick={onClose}>\n              <Icon icon='close' />\n            </button>\n          }\n        </div>\n        <Accordion>\n          {this.renderGroups()}\n        </Accordion>\n      </div>\n    );\n  }\n}","import classNames from 'classnames';\nimport { Component } from 'react';\nimport Icon from '../reusables/icon/Icon';\nimport './MenuButton.scss';\n\ninterface MenuButtonProps {\n  text?: string;\n  onClick: () => void;\n}\n\nexport default class MenuButton extends Component<MenuButtonProps> {\n  \n  public render() {\n    const { text, onClick } = this.props;\n    return (\n      <div className='menu-button-container'>\n        <button type='button' className={classNames('menu-button', {'text-button': !!text})} onClick={onClick}>\n          {text ? text : \n            <Icon icon='chevron-left' />\n          }\n        </button>\n      </div>\n    );\n  }\n}","import { Dictionary, MpSdk, Vector3 } from \"../mp/sdk\";\n\n/**\n * This module is for general helper interfaces, types, and methods.\n */\n\n/**\n * Euclidean distance between two points.\n * @param {Vector3} p1 \n * @param {Vector3} p2 \n * @returns {number}\n */\nexport function distance(p1: Vector3, p2: Vector3): number {\n  return Math.sqrt((p1.x - p2.x)**2 + (p1.y - p2.y)**2 + (p1.z - p2.z)**2);\n}\n\nexport function sweepIdToPoint(id: string, sweepData: Dictionary<MpSdk.Sweep.ObservableSweepData>): Vector3 {\n  return sweepData[id].position;\n}\n\n/**\n * Returns a number clamped to the given range.\n * @param {number} num The number to clamp.\n * @param {number} min The lower bound of the range.\n * @param {number} max The upper bound of the range.\n */\nexport function clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max);\n}\n\nexport {};","import { Sweep, Vector3 } from '../mp/sdk';\nimport { distance } from './utils';\n\n/**\n * Path given by `findShortestPath` as list of sweep ids. It's a separate type\n * just in case the return type changes.\n */\nexport type SweepPath = string[];\n\n/**\n * Graph as adjacency list, with sweep ids mapping to a list of neighboring ids,\n * who each map to corresponding distances.\n */\ninterface SweepGraph {\n  [a_id: string]: AdjacencyNode;\n}\ninterface AdjacencyNode {\n  [b_id: string]: number;\n}\n\nexport interface SweepPositions {\n  [id: string]: Vector3;\n}\n\nexport default class Pathfinder {\n\n  private VERT_THRESHOLD = 0.5; // penalize sweeps vertically separated by this distance, in meters\n  private HORZ_THRESHOLD = 10.0; // penalize sweeps horizontally separated by this distance, in meters\n\n  private graph: SweepGraph = {};\n  public path: SweepPath = [];\n\n  private sweepPositions: SweepPositions = {};\n\n  constructor(sweepData: Sweep.SweepData[]) {\n    // init sweepPositions\n    sweepData.forEach(sweep => this.sweepPositions[sweep.sid] = sweep.position);\n    this.createGraph(sweepData);\n  }\n\n  /**\n   * Generate graph of sweep distances.\n   * @param {Sweep.SweepData[]} sweeps List of sweep data, such as `sdk.Model.getData().sweeps`\n   */\n  private createGraph(sweeps: Sweep.SweepData[]): void {\n    const graph: SweepGraph = {};\n    for (let i = 0; i < sweeps.length; i++) {\n      const sweep_a = sweeps[i];\n      const adj: AdjacencyNode = {};\n      const neighbor_sids = sweep_a.neighbors;\n      for (let j = 0; j < neighbor_sids.length; j++) {\n        const sweep_b_sid = neighbor_sids[j];\n        const d = distance(sweep_a.position, this.sweepPositions[sweep_b_sid]);\n        adj[sweep_b_sid] = d;\n      }\n      graph[sweep_a.sid] = adj;\n    }\n    this.graph = graph;\n  }\n\n  /**\n   * Heuristic function for A*. Just take Euclidean distance.\n   */\n  private heuristic(i_sid: string, j_sid: string): number {\n    const { sweepPositions } = this;\n    return distance(sweepPositions[i_sid], sweepPositions[j_sid]);\n  }\n\n  /**\n   * Additional penalty to avoid large vertical/horizontal jumps.\n   */\n  private penalty(i_sid: string, j_sid: string): number {\n    const { sweepPositions } = this;\n    return ((sweepPositions[i_sid].y - sweepPositions[j_sid].y) / this.VERT_THRESHOLD) ** 4\n      + (((sweepPositions[i_sid].x - sweepPositions[j_sid].x) ** 2 + (sweepPositions[i_sid].z - sweepPositions[j_sid].z) ** 2) / this.HORZ_THRESHOLD);\n  }\n\n  /**\n   * Find shortest path between two sweeps connected by valid movements.\n   * @param {string} a_sid SID of starting sweep.\n   * @param {string} b_sid SID of ending sweep.\n   * @returns {SweepPath} Path from `a_sid` to `b_sid`.\n   */\n  public async findShortestPath(a_sid: string, b_sid: string): Promise<SweepPath | undefined> {\n\n    const { graph } = this;\n\n    // check SIDs are valid\n    if (graph[a_sid] === undefined || graph[b_sid] === undefined) {\n      console.error('Sweep SID(s) is invalid.');\n      return;\n    }\n\n    const ht: any = {}; // hash table that stores the following info for each encountered sweep:\n    ht[a_sid] = { visited: false, distance: 0, cost: 0, parent: null };\n\n    // loop A* algorithm\n    let debug_n = 0; // count number of iterations\n\n    while (true) {\n      debug_n += 1;\n      // find unvisited sweep with minimum cost = distance + heuristic\n      // TODO: optimize with priority queue\n      let min_sid;\n      const encountered_sids = Object.keys(ht);\n      for (let i = 0; i < encountered_sids.length; i++) {\n        const sid = encountered_sids[i];\n        if (!ht[sid].visited && (min_sid === undefined || ht[sid].cost < ht[min_sid].cost)) {\n          min_sid = sid;\n        }\n      }\n      if (min_sid === undefined) {\n        console.error('Could not find path; sweeps are not connected.');\n        return;\n      }\n      // check if sweep is ending point\n      if (min_sid === b_sid) {\n        break;\n      }\n      // add all neighbors of `min_sid`\n      ht[min_sid].visited = true;\n      const neighbor_sids = Object.keys(graph[min_sid]);\n      for (let i = 0; i < neighbor_sids.length; i++) {\n        const sid = neighbor_sids[i];\n        const dist = ht[min_sid].distance + graph[min_sid][sid];\n        const cost = dist + this.penalty(min_sid, sid) + this.heuristic(sid, b_sid);\n        if (sid in ht) { // if sweep has been encountered\n          if (!ht[sid].visited && (ht[sid].cost > cost)) { // if not visited and smaller cost, then update\n            ht[sid].parent = min_sid;\n            ht[sid].distance = dist;\n            ht[sid].cost = cost;\n          }\n        } else { // if sweep has not been encountered yet\n          ht[sid] = { visited: false, distance: dist, cost: cost, parent: min_sid };\n        }\n      }\n    }\n    console.log(`Pathfind iterations: ${debug_n}`);\n\n    // traverse graph back to starting point\n    let sid = b_sid;\n    const path: string[] = [sid];\n    while (ht[sid].parent !== null) {\n      sid = ht[sid].parent as string;\n      path.push(sid);\n    }\n    path.reverse();\n    return path;\n\n  }\n}","export default class Translator {\n\n  private xhr: XMLHttpRequest;\n  private url: string = \"https://api-free.deepl.com/v2/translate\";\n  private key: string = \"1fa4cd0a-7872-2cc0-e6e3-e96c6587ca62:fx\";\n\n  constructor(lang: string) {\n    this.xhr = new XMLHttpRequest();\n    this.url += `?auth_key=${this.key}&target_lang=${lang}`;\n  }\n\n  public testQuery(): boolean {\n    const { xhr } = this;\n\n    let query = this.url + `&text=`;\n    xhr.open(\"GET\", query, false); \n    xhr.send(); // synchronous request\n    let status = xhr.status;\n    if (status === 0 || (status >= 200 && status < 400)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public checkUsage(): void {\n    const { xhr } = this;\n    xhr.open(\"GET\", `https://api-free.deepl.com/v2/usage?auth_key=${this.key}`, false);\n    xhr.send(); // synchronous request\n    console.log(\"DeepL Usage\", xhr.responseText);\n  }\n\n  public translate(texts: string[]): string[] {\n    const { xhr } = this;\n\n    let query = this.url;\n    for (let i=0; i<texts.length; i++) {\n      query += `&text=${texts[i]}`;\n    }\n    xhr.open(\"GET\", query, false); \n    xhr.send(); // synchronous request\n    let status = xhr.status;\n    if (status === 0 || (status >= 200 && status < 400)) {\n      const json = xhr.responseText;\n      return this.parse(json);\n    } else {\n      return texts;\n    }\n  }\n\n  /**\n   * Parse the JSON received from DeepL\n   */\n  private parse(raw: string): string[] {\n    const obj = JSON.parse(raw);\n    const transTexts = [];\n    for (let i=0; i<obj.translations.length; i++) {\n      transTexts.push(obj.translations[i].text);\n    }\n    return transTexts;\n  }\n\n}\n","import { Color, Vector3 } from '../../mp/sdk';\nimport { distance } from '../utils';\n\ninterface PathRendererInputs {\n  visible: boolean;\n  path: Vector3[];\n  radius: number;\n  color: Color | number;\n  opacity: number;\n  heightOffset: number;\n  stepMultiplier: number;\n}\n\ninterface PathRendererOutputs {\n  objectRoot: any;\n  curve: any;\n  distance: number;\n}\n\nclass PathRenderer {\n\n  private material: any;\n\n  private inputs: PathRendererInputs = {\n    visible: false,\n    path: [], // positions on path\n    radius: 0.15,\n    color: 0x00ff00,\n    opacity: 0.5,\n    heightOffset: -1.1,\n    stepMultiplier: 5,\n  };\n\n  private context: any;\n\n  private outputs = {\n    curve: null,\n    distance: 0,\n  } as PathRendererOutputs;\n\n  public onInit = async () => {\n\n    const THREE = this.context.three;\n\n    const { path,\n            radius,\n            heightOffset,\n            opacity,\n            color,\n            stepMultiplier } = this.inputs;\n\n    // check if path is long enough and no undefined points\n    if (path.length < 2 || !path.every(p => !!p)) return;\n    \n    let d = 0;\n    const points = path.map((p, i) => {\n      if (i > 0) {\n        d += distance(path[i-1], p);\n      }\n      return new THREE.Vector3(p.x, p.y+heightOffset, p.z);\n    });\n    const spline = new THREE.CatmullRomCurve3(points);\n\n    const extrudeSettings = {\n        steps: stepMultiplier * path.length,\n        bevelEnabled: false,\n        extrudePath: spline,\n    };\n\n    // Shape to extrude\n    const arcShape = new THREE.Shape().absarc(0, 0, radius, 0, Math.PI * 2, false);\n    \n    const extrudeGeometry = new THREE.ExtrudeGeometry( arcShape, extrudeSettings );\n    \n    this.material = new THREE.MeshBasicMaterial({\n        color: color as number,\n        transparent: true,\n        opacity: opacity,\n    });\n\n    const pathMesh = new THREE.Mesh(extrudeGeometry, this.material);\n\n    this.outputs.objectRoot = pathMesh;\n    this.outputs.curve = spline;\n    this.outputs.distance = d;\n  };\n\n  public onEvent = function(_type: any, _data: any) {\n  }\n\n  public onInputsUpdated = function(_previous: any) {\n  };\n\n  public onTick = function(_tickDelta: any) {\n  };\n\n  public onDestroy = () => {\n    this.material?.dispose();\n  };\n}\n\nexport const pathRendererType = 'sdk-component.pathRenderer';\nexport function PathRendererFactory() {\n  return new PathRenderer();\n}","import { Vector3 } from '../../mp/sdk';\nimport { clamp } from '../utils';\n\ntype Euler = {\n\tx: number;\n\ty: number;\n\tz: number;\n  order: string;\n};\n\ninterface CameraControllerInputs {\n  curve: any, \n  speed: number, \n  verticalOffset: number, \n  enabled: boolean, \n  changeUCallback: (u: number) => void, \n}\n\ninterface CameraControllerOutputs {\n  camera: any,\n}\n\nclass CameraController {\n\n  private u: number = 0; // number in [0, 1] representing position along curve\n  private length: number = 0; // length of curve\n  private up: undefined | Vector3;\n\n  private inputs: CameraControllerInputs = {\n    curve: null, // THREE.Curve object\n    speed: 1.5, // speed in meters per second\n    verticalOffset: 1., // vertical offset from curve\n    enabled: false, // true to move forward automatically, false to pause\n    changeUCallback: (u) => null, // callback eahc time u changes\n  };\n\n  private outputs = {\n    camera: null,\n  } as CameraControllerOutputs;\n\n  private context: any;\n\n  /**\n   * Given u along curve, return position and rotation for camera.\n   */\n  private getPoseAt(u: number): {position: Vector3, rotation: Euler} {\n    const { curve, speed, verticalOffset } = this.inputs;\n    const THREE = this.context.three;\n    // position\n    const uPast = Math.max(u - 0.1 * speed / this.length, 0); // 0.1 second in past\n    const uFuture = Math.min(u + speed / this.length, 1); // 1 second in the future\n    const position = curve.getPointAt(u);\n    position.y += verticalOffset; // add vertical offset;\n    const positionPast = curve.getPointAt(uPast);\n    const positionFuture = curve.getPointAt(uFuture);\n    // rotation\n    const matrix = new THREE.Matrix4().lookAt(positionPast, positionFuture, this.up);\n    const rotation = new THREE.Euler().setFromRotationMatrix(matrix, \"YXZ\");\n    return { position, rotation };\n  }\n\n  /**\n   * Set camera pose.\n   */\n  private setCamera(position: Vector3, rotation: Euler) {\n    const { camera } = this.outputs;\n    camera.position.copy(position);\n    camera.rotation.copy(rotation);\n    camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Manually set u for camera.\n   */\n  public setU(u: number) {\n    this.u = u;\n    const { position, rotation } = this.getPoseAt(u);\n    this.setCamera(position, rotation);\n    this.inputs.changeUCallback(u);\n  }\n\n  // --- IComponent methods ----------------------------------------------------\n\n  public onInit = async () => {\n    const { curve } = this.inputs;\n    const THREE = this.context.three;\n\n    const camera = new THREE.PerspectiveCamera( 45, 1.333, 1, 1000 );\n    this.outputs.camera = camera;\n    this.length = curve.getLength() - 1;\n    this.up = new THREE.Vector3(0, 1, 0);\n  };\n\n  public onTick = async (tickDelta: number) => {\n    const { speed, enabled } = this.inputs;\n    if (enabled) {\n      this.u = clamp(this.u + speed * (tickDelta/1000) / this.length, 0, 1);\n      const { u } = this;\n      const { position, rotation } = this.getPoseAt(u);\n      this.setCamera(position, rotation);\n      this.inputs.changeUCallback(u);\n    }\n  };\n\n  public onDestroy = function() {\n  };\n}\n\nexport const cameraControllerType = 'sdk-component.cameraController';\nexport function CameraControllerFactory() {\n  return new CameraController();\n}\n","import { MpSdk } from \"../../mp/sdk\";\nimport { PathRendererFactory, pathRendererType } from \"./PathRenderer\";\nimport { CameraControllerFactory, cameraControllerType } from \"./CameraController\";\n\n/**\n * Registers all SDK Scene components.\n * @param {MpSdk} sdk\n */\n\nexport const initComponents = async (sdk: MpSdk | any) => {\n  await Promise.all([\n    sdk.Scene.register(pathRendererType, PathRendererFactory),\n    sdk.Scene.register(cameraControllerType, CameraControllerFactory),\n  ]);\n}","\nexport interface SweepAlias {\n  [sid: string]: string;\n}\n\nconst robinsonHall: SweepAlias = {\n  \"36642185cf3f481897967d749003d683\": \"Great Hall\",\n  \"e282bc9e7ae94a58aa624c4679e71946\": \"105\",\n  \"03dbddfa78074195ad605033e1a5ea88\": \"106\",\n  \"ecf49427817f4ad2a18971bd836f577a\": \"107\",\n  \"233c8a90b0d44803b451cc18c2beb2ac\": \"125: History Department Conference Room\",\n  \"7f3f51d4c0b9448f9e5c78a9882fe912\": \"222\",\n  \"5c19c240375d4d04a6c9ca790a35fa02\": \"223\",\n  \"c2096fe91b2543f78ca9d95070e78e63\": \"225: History Department Graduate Lounge\",\n  \"1b11bb808949421ba32142f4c48b9823\": \"B21: Warren Center Conference Room\",\n};\n\nexport const sweepAliases: any = {\n  \"GycExKiYVFp\": robinsonHall,\n}\n","import React, { Component } from 'react';\nimport { clamp } from '../../utils';\nimport './ProgressBar.scss';\n\nconst PROGRESS_BAR_THUMB_SIZE = '14px';\n\ninterface ProgressBarProps {\n  min: number;\n  max: number;\n  initValue?: number;\n  overrideValue?: number;\n  scrub?: boolean;\n  step?: number;\n  noThumb?: boolean;\n  onMouseDown?: (value: number) => void;\n  onMouseUp?: (value: number) => void;\n  onChange?: (value: number) => void;\n}\n\ninterface ProgressBarState {\n  value: number; // will always match overrideValue when passed around (see componentdidUpdate)\n  mouseDown: boolean;\n}\n\nexport default class ProgressBar extends Component<ProgressBarProps, ProgressBarState> {\n  \n  private abortController = new AbortController();\n  private trackRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: ProgressBarProps) {\n    super(props);\n    const { initValue } = props;\n    \n    this.state = {\n      value: initValue || 0,\n      mouseDown: false,\n    }\n  }\n  \n  public componentDidMount() {\n    window.addEventListener(\n      'mouseup',\n      this.onMouseUp,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n    window.addEventListener(\n      'mousemove',\n      this.onMouseMove,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n  }\n\n  public componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  public componentDidUpdate(prevProps: ProgressBarProps, prevState: ProgressBarState) {\n    if (prevProps.overrideValue !== prevState.value && this.props.overrideValue) {\n      this.setState({ value: this.props.overrideValue });\n    }\n  }\n\n  /**\n   * Calculates value of progress bar from mouse position.\n   * @param mx Mouse X position.\n   * @returns Clamped value based on min/max, or current value iff ref is undefined.\n   */\n  private calculate(mx: number): number {\n    const { min, max } = this.props;\n    const { value } = this.state;\n    const track = this.trackRef.current;\n    if (!track) return value;\n\n    const rect = track.getBoundingClientRect();\n    const dx = mx - rect.left;\n    const total = rect.right - rect.left;\n    const frac = dx / total;\n    const range = max - min;\n    \n    return clamp(frac * range, min, max);\n  }\n\n  private onMouseDown = (e: any) => {\n    const { onMouseDown, onChange } = this.props;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    const value = this.calculate(ev.clientX);\n    onMouseDown?.(value);\n    onChange?.(value);\n    this.setState({ value: value, mouseDown: true });\n  }\n\n  private onMouseUp = (e: any) => {\n    const { onMouseUp } = this.props;\n    const { value, mouseDown, } = this.state;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    if (mouseDown) {\n      onMouseUp?.(value);\n    }\n    this.setState({ mouseDown: false });\n  }\n\n  private onMouseMove = (e: any) => {\n    const { scrub, onChange, } = this.props;\n    const { mouseDown } = this.state;\n    if (!scrub || !mouseDown) return;\n\n    const ev = e as MouseEvent;\n    const value = this.calculate(ev.clientX);\n    this.setState({ value: value }, () => onChange?.(value))\n  }\n\n  public render() {\n    const {\n      min,\n      max,\n      overrideValue,\n      noThumb,\n    } = this.props;\n    const {\n      value,\n      mouseDown\n    } = this.state;\n\n    const frac = (overrideValue || value) / (max - min);\n    const percent = frac * 100;\n\n    return (\n      <div className='progress-bar-container'>\n        <div className='progress-bar-track-container'>\n          <div\n            className='progress-bar-track'\n            onMouseDown={this.onMouseDown}\n            ref={this.trackRef}\n          >\n            <div\n              className='progress-bar-progress'\n              style={{\n                width: `${percent}%`\n              }}\n            ></div>\n          </div>\n        </div>\n        { !noThumb &&\n          <div\n            className='progress-bar-thumb'\n            style={{\n              width: PROGRESS_BAR_THUMB_SIZE,\n              height: PROGRESS_BAR_THUMB_SIZE,\n              left: `calc(${percent}% - (${PROGRESS_BAR_THUMB_SIZE}/2))`,\n            }}\n            onMouseDown={(e) => {this.onMouseDown(e); console.log('down')}}\n          ></div>\n        }\n        {/* Needed so mousemove fires even when over the {pointer-events: none} canvas */}\n        <div className='pointer-event-overlay'\n          style={{\n            position: 'fixed',\n            inset: '0',\n            pointerEvents: 'all',\n            display: mouseDown ? 'block' : 'none',\n          }}\n        ></div>\n      </div>\n    );\n  }\n}","import { Component } from 'react';\nimport Icon from '../../reusables/icon/Icon';\nimport './ControlsOverlay.scss';\nimport ProgressBar from './ProgressBar';\n\ninterface ControlsOverlayProps {\n  playing: boolean;\n  onPlay: () => void;\n  onPause: () => void;\n  onExit: () => void;\n  setU: (u: number) => void;\n  u: number;\n}\n\ninterface ControlsOverlayState {\n  rememberPlayState: boolean;\n}\n\nexport default class ControlsOverlay extends Component<ControlsOverlayProps, ControlsOverlayState> {\n\n  constructor(props: ControlsOverlayProps) {\n    super(props);\n    this.state = {\n      rememberPlayState: props.playing,\n    }\n  }\n\n  private onScrubMouseDown = () => {\n    this.props.onPause();\n  }\n\n  private onScrubMouseUp  = () => {\n    if (this.state.rememberPlayState) {\n      this.props.onPlay();\n    }\n  }\n\n  private togglePlay = () => {\n    const { playing, onPlay, onPause } = this.props;\n    playing ? onPause() : onPlay();\n    this.setState({ rememberPlayState: !playing })\n  }\n\n  public render() {\n    const { playing, onExit, setU, u } = this.props;\n\n    return (\n      <div className='controls-overlay-container'>\n        <div className='controls-overlay'>\n          <ProgressBar\n            min={0}\n            max={1}\n            scrub={true}\n            onChange={setU}\n            onMouseDown={this.onScrubMouseDown}\n            onMouseUp={this.onScrubMouseUp}\n            overrideValue={u}\n          />\n          <div className='control-button-container'>\n            <button type='button'\n              className='control-button play-button'\n              onClick={this.togglePlay}\n            >\n              <Icon icon={playing ? 'showcase-pause-lg' : 'showcase-play-lg'} classes='play-pause-button' />\n            </button>\n            <button type='button' className='control-button exit-button' onClick={onExit}>\n              <Icon icon='close' />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}","import { Component } from 'react';\nimport './FlyModeButton.scss';\n\ninterface FlyModeButtonProps {\n  onClick: () => void;\n}\n\nexport default class FlyModeButton extends Component<FlyModeButtonProps> {\n  public render() {\n    const { onClick } = this.props;\n    return (\n      <div className='flymode-button-container'>\n        <button className='flymode-button' onClick={onClick}>Fly Mode</button>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { GetSDK } from '../mp/GetSDK';\nimport { Dictionary, MpSdk, Sweep } from '../mp/sdk';\nimport './App.scss';\nimport Frame from './Frame';\nimport Menu from './ui/Menu';\nimport MenuButton from './ui/MenuButton';\nimport Pathfinder from './Pathfinder';\nimport Translator from './Translator';\nimport { initComponents } from './sdk-components';\nimport { pathRendererType } from './sdk-components/PathRenderer';\nimport { cameraControllerType } from './sdk-components/CameraController';\nimport { sweepIdToPoint } from './utils';\nimport { SweepAlias, sweepAliases } from './sweepAliases';\nimport ControlsOverlay from './ui/overlay/ControlsOverlay';\nimport FlyModeButton from './ui/overlay/FlyModeButton';\n\nexport interface Sdk extends MpSdk {\n  Scene?: any;\n}\n\ninterface AppState {\n  currSweepId?: string;\n  selectedSweepId?: string;\n  sweepData: Sweep.SweepData[]; // put in state because changes should trigger rerender\n  sweepMap?: Dictionary<MpSdk.Sweep.ObservableSweepData>;\n  path?: any; // put in state so path visibility updates trigger rerender\n  menuEnabled: boolean;\n  flyModeEnabled: boolean;\n  flyU: number; // integer in [0, 1] indicating position in flythrough\n  flyModePlaying: boolean;\n}\n\nconst defaultUrlParams: any = {\n  m: 'GycExKiYVFp',\n  applicationKey: 'q44m20q8yk81yi0qgixrremda',\n  title: '0',\n  qs: '1',\n  hr: '0',\n  brand: '0',\n  help: '0',\n  play: '1',\n}\n\n/**\n * This is the top level class for the app. It handles API key, model ID, and url stuff,\n * and holds references to objects/modules/components for object composition.\n * Do non-initializing SDK and UI stuff in other components/files.\n */\nexport default class App extends Component<{}, AppState> {\n\n  private src: string; // the url source for the sdk\n  private lang: string | null = null;\n  private sdk?: Sdk;\n\n  private pathNode: any; // the node for the PathRenderer component\n  private pathfinder?: Pathfinder;\n\n  private sweepAlias?: SweepAlias; // human-readable alias for sweeps, if available\n\n  private flyNode: any; // the node for the CameraController component\n  private camCon: any; // CameraConroller component\n\n  constructor(props: any) {\n    super(props);\n    const queryString = this.handleUrlParams();\n    this.src = `${process.env.PUBLIC_URL}/bundle/showcase.html?${queryString}`;\n\n    this.state = {\n      sweepData: [],\n      menuEnabled: true,\n      flyModeEnabled: false,\n      flyU: 0,\n      flyModePlaying: false,\n    };\n  }\n\n  /**\n   * Parses the current url params and combines them with the default params, updating when necessary.\n   * @returns url param query string (without `?`), ready to be pasted directly into the url\n   */\n  private handleUrlParams(): string {\n    const params = new URLSearchParams(window.location.search);\n    this.lang = params.get('lang');\n    for (const [k, v] of Object.entries(defaultUrlParams)) {\n      if (!params.has(k)) {\n        params.append(k, ''+v); // convert v to string\n      }\n    }\n    return params.toString();\n  }\n\n  // --- React methods ---------------------------------------------------------\n\n  public async componentDidMount() {\n    \n    this.sdk = await GetSDK('showcase', defaultUrlParams.applicationKey);\n    await initComponents(this.sdk);\n\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    // Add user-generated Mattertags to the default model\n    // In production, this block will be removed\n    await this.sdk.Model.getData().then( async (data) => {\n      if (data.sid === 'GycExKiYVFp') {\n        const mattertags = [];\n        mattertags.push(\n          {\n            label: \"Revitalizing the Great Hall\",\n            description: \"Within the building’s Great Hall, new vestibule spaces were created to \"+\n              \"connect the main circulation corridor to new restrooms. Elevator lobbies and \"+\n              \"office suite entrances were treated as extensions of the original McKim design, \"+\n              \"with matching marble flooring and wall base, and stained oak millwork-encased \"+\n              \"openings. The installation of fire sprinklers throughout the building helped call \"+\n              \"attention to new opportunities for restoring spatial clarity; obsolete steel and \"+\n              \"wired glass partitions installed in the main corridor in the 1970s were removed, \"+\n              \"opening up the axial hallway to its original extents and further enhancing spatial \"+\n              \"connectivity.\",\n            anchorPosition: {x: 16.55, y: 1.28-1.5, z: 6.69},\n            stemVector: { x: 0, y: 1, z: 0 },\n          }\n        );\n        await this.sdk?.Mattertag.add(mattertags);\n      }\n    });\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    this.sdk.Model.getData().then( (data) => {\n      const sweepData = data.sweeps;\n      this.pathfinder = new Pathfinder(sweepData);\n      this.setState({\n        sweepData: sweepData,\n      });\n      this.sweepAlias = sweepAliases[data.sid];\n    });\n\n    this.sdk.Sweep.data.subscribe({\n      onCollectionUpdated: (collection: Dictionary<MpSdk.Sweep.ObservableSweepData>) => {\n        this.setState({\n          sweepMap: collection\n        });\n      },\n    });\n\n    this.sdk.Sweep.current.subscribe((currentSweep: any) => {\n      if (currentSweep.sid) console.log(currentSweep.sid, currentSweep.position);\n      this.setState({\n        currSweepId: currentSweep.sid,\n      });\n    });\n\n    // translate all mattertags\n    this.translateMattertags();\n  }\n\n  public componentDidUpdate(_prevProps: any, prevState: AppState) {\n    const { currSweepId, selectedSweepId } = this.state;\n\n    // only update path if sweep state changes\n    (currSweepId !== prevState.currSweepId ||\n    selectedSweepId !== prevState.selectedSweepId) &&\n    this.handlePath();\n  }\n\n  // --- SDK methods -----------------------------------------------------------\n\n  private onOptionSelect = (id: string) => {\n    this.setState({\n      selectedSweepId: id,\n    });\n  }\n\n  private async handlePath() {\n    const { currSweepId, selectedSweepId, sweepMap } = this.state;\n    const { sdk, pathfinder } = this;\n\n    if (sdk && sweepMap && currSweepId && selectedSweepId && pathfinder) {\n      const path = await pathfinder.findShortestPath(currSweepId, selectedSweepId);\n      if (!path) return;\n      if (this.pathNode) this.pathNode.stop();\n      this.pathNode = await sdk.Scene.createNode();\n      this.setState ({\n        path: this.pathNode.addComponent(pathRendererType, {\n          path: path.map(id => sweepIdToPoint(id, sweepMap)),\n          opacity: 0.7,\n          radius: 0.12,\n          stepMultiplier: 10,\n          color: 0x8df763,\n        })\n      });\n      this.pathNode.start();\n    }\n  }\n\n  private toggleFlyMode = async () => {\n    const { flyModeEnabled } = this.state;\n    if (flyModeEnabled) {\n      await this.exitFly();\n    } else {\n      await this.initFly();\n    }\n    this.setState({flyModeEnabled: !flyModeEnabled});\n  };\n\n  private initFly = async () => {\n    const { sdk } = this;\n    const { path } = this.state;\n\n    if (sdk && path) {\n      if (this.flyNode) this.flyNode.stop();\n      this.flyNode = await sdk.Scene.createNode();\n      this.camCon = this.flyNode.addComponent(cameraControllerType, {\n        changeUCallback: (u: number) => this.setState({flyU: u}),\n      });\n      const cam = this.flyNode.addComponent('mp.camera', {\n        enabled: true,\n      });\n      this.camCon.bind('curve', path, 'curve');\n      cam.bind('camera', this.camCon, 'camera');\n      this.flyNode.start();\n\n      // orient camera to start of flythrough\n      const { position, rotation } = this.camCon.getPoseAt(0);\n      await sdk.Mode.moveTo(sdk.Mode.Mode.DOLLHOUSE, {\n        position,\n        rotation: {x: rotation.x*180/Math.PI, y: rotation.y*180/Math.PI},\n      });\n\n      // start flythough\n      this.setState({flyU: 0});\n      this.playFly();\n    }\n  };\n\n  private exitFly = async () => {\n    const { sdk, flyNode } = this;\n    if (flyNode) flyNode.stop();\n    if (sdk) sdk.Mode.moveTo(sdk.Mode.Mode.INSIDE);\n    this.setState({ flyModePlaying: false, });\n  };\n\n  private playFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = true;\n    this.setState({ flyModePlaying: true, });\n  };\n  private pauseFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = false;\n    this.setState({ flyModePlaying: false, });\n  };\n  private setFlyU = (u: number) => {if (this.camCon) this.camCon.setU(u)};\n\n  private toggleMenu = () => {\n    this.setState({\n      menuEnabled: !this.state.menuEnabled,\n    });\n  }\n\n  /**\n   * TODO: make async to speed up\n   */\n   private async translateMattertags() {\n    const { sdk, lang } = this;\n\n    if (sdk && lang) {\n      const Trans = new Translator(lang);\n      if (Trans.testQuery()) { // check HTTP request works\n        const mattertagData = await sdk.Mattertag.getData();\n        for (let i=0; i<mattertagData.length; i++) {\n          const { sid, label, description, media } = mattertagData[i];\n          const [ newLabel, newDescription ] = Trans.translate([label, description]);\n          sdk.Mattertag.editBillboard(sid, {\n            label: newLabel, \n            description: newDescription, \n            media,\n          });\n        }\n      }\n      Trans.checkUsage();\n    }\n  }\n\n  // --- Render ----------------------------------------------------------------\n\n  public render() {\n    const {\n      currSweepId,\n      selectedSweepId,\n      sweepData,\n      menuEnabled,\n      flyModeEnabled,\n      flyU,\n      path,\n      flyModePlaying,\n    } = this.state;\n\n    return (\n      <div className='app'>\n        <div id='frame-container'>\n          <Frame src={this.src} disableClicks={flyModeEnabled} />\n          <div id='overlay-container'>\n            {/* Put all showcase overlay components here */}\n            { path && (\n              flyModeEnabled ?\n              <ControlsOverlay\n                playing={flyModePlaying}\n                onPlay={this.playFly}\n                onPause={this.pauseFly}\n                onExit={this.toggleFlyMode}\n                setU={this.setFlyU}\n                u={flyU}\n              /> \n              : <FlyModeButton onClick={this.toggleFlyMode} />\n            )}\n          </div>\n        </div>\n        { !menuEnabled &&\n          <MenuButton onClick={this.toggleMenu} />\n        }\n        { menuEnabled &&\n          <Menu\n            currSweepId={currSweepId}\n            selectedSweepId={selectedSweepId}\n            sweepData={sweepData}\n            sweepAlias={this.sweepAlias}\n            onChange={this.onOptionSelect}\n            onClose={this.toggleMenu}\n          />\n        }\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}